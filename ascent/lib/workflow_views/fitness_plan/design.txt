Views: 
1. MyJourneyView: My Journey is a summary view. It has four sections that go from bottom to top: Build foundations, Explore motivations, Form habits, Find a passion.
Each of these stages is a section rising. It starts from the bottom where you start to the top with a circle that can be filled in marking it. 
(Note, each is the same widget).

Within each stage of the journey you accumulate badges based on your plan and journey. The journey adapts dynamically.

2. ChallengeSetView: Each day / week there are activities you have to finish and accomplish. These fit into one of five categories: aerobic, strength, diet, sleep, balance.
Not every user has every category. The full set is represented in a card that summarizes what you need to complete for the week or day. 
Each activity can be marked as complete or not.

3. ActivityView: Each activity can be clicked into for more information. The Activity View explains the activity, how to do it, it's purpose, etc.




-------------------------------------------------------------------------
Models:
1. Fitness plan:
2. Fitness plan history: ChallengeSetView and Survey responses for each
- 

Providers:
1. Fitness plan provider: a fitness plan, history, current




The main workflow (user journey)

Onboard & constraints

Collect: goal(s), schedule (days/time), time per session, equipment access, injuries/pain flags, training history, preferences (bodyweight vs weights), home vs gym.

Output: a Plan Brief (what/why/how, start date, cadence).

Baseline assessment

Quick self-report (RPE on stairs, pushup/plank/air-squat test, 3-minute step/Cooper proxy, sit-and-reach, balance stand) + optional strength estimates (e.g., e1RM from reps@weight).

Output: initial Training Level per domain (strength, work capacity, mobility) + auto-loads for day 1.

Plan generation

Choose a template (e.g., Beginner 3×/week full-body) → inject user constraints → produce meso-cycle with blocks (e.g., 4-6 weeks) and scheduled sessions.

Output: Plan v1 (phases, weekly split, sessions with prescriptions, progression rules).

Weekly scheduling

Map sessions to calendar with user’s available days; allow drag-drop, reschedule, swap, or skip with deload rules.

Day-of execution

Today view → warm-up → exercise blocks with timers, load suggestions, RIR cues, form videos.

User logs sets/reps/load or taps “complete.” Readiness check (sleep, stress, soreness) can auto-adjust loads.

Adaptation loop

After each session: update performance, fatigue, and progression counters.

Weekly: rerun progression rules (progress/deload/regress), re-plan missed work, optionally re-test a KPI.

Review & share

Show trendlines (volume, top set e1RM, run/walk distance, HR zones), badges, and next-week preview. Allow exporting a shareable summary.



What a workout plan contains (core data model)

A. Plan metadata

id, user_id, goal (e.g., “Get stronger / lose fat / general fitness”), start_date, duration_weeks

experience_level (novice/intermediate), equipment_profile (dumbbells, bands, rack), time_per_session, days_per_week

constraints (injuries, movement bans), notes_coach

B. Periodization

phases (array): each phase = name (Base / Build / Peak / Deload), weeks, focus, progression_mode (linear, double-progression, RIR-anchored).

C. Calendar

weeks[ ] -> days[ ] -> session_id

Rescheduling state (planned vs completed vs skipped), and audit trail.

D. Sessions

session has: title (e.g., “Full-Body A”), estimated duration, warm-up, main blocks, finisher/conditioning, cool-down.

Tags: full-body / upper / lower / push / pull; energy system (easy aerobic, intervals).

E. Exercise blocks

Type: straight sets, superset (A1/A2), circuit, EMOM, interval, AMRAP, tempo.

Each exercise prescription includes:

exercise_id (from library) + variants/regressions allowed

sets × reps or time, intensity (load %, e1RM, RIR, RPE, band color, level), rest, tempo, cues

progression rule (e.g., “add 2.5–5 lb when all sets hit RIR 2”)

substitution list if equipment/pain issues occur

F. Progression rules (per exercise or block)

Examples:

Double progression: keep load; increase reps within a rep range until top end is met across sets → add load.

RIR-guided load: if achieved RIR < target (too hard), reduce next week load by 2.5–5%; if > target (too easy), increase 2.5–5%.

Conditioning: time trial PR ladder or zone-based time accumulation.

Deload: every 4th week reduce volume −30–40% or intensity −10%.

G. Constraints & readiness

Pain flags per movement (e.g., deep knee flexion) trigger auto-swap (e.g., back squat → box squat → goblet squat).

Daily readiness (1–5) scales loads ±2.5–7.5% within safe bands.

H. Content & UX

Exercise videos, short cues, safety notes, and common mistakes.

Timers, plate math, RIR helper, left/right balance prompts.

I. Analytics

Per-exercise e1RM trend, total volume (sets×reps×load), weekly minutes by intensity, compliance %, streaks, PRs.

Audit for plan changes and versioning.



