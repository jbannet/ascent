# Question JSON Structure Documentation

This document describes the JSON format for creating onboarding questions. Each question type has specific configuration options in the `config` object that control how users provide their answers.

## Base Question Structure

All questions require these base fields:

```json
{
  "id": "unique_identifier",
  "question": "Question text displayed to user",
  "section": "section_name",
  "type": "question_type",
  "subtitle": "Optional additional context text",
  "options": [],
  "condition": {},
  "config": {}
}
```

### Base Fields:
- `id` (required): Unique identifier for storing/retrieving answers
- `question` (required): Main question text shown to user
- `section` (required): Section name for grouping questions
- `type` (required): Question input type (see types below)
- `subtitle` (optional): Additional context text under main question
- `options` (optional): Array of choices for single/multiple choice questions
- `condition` (optional): Display condition based on previous answers
- `config` (optional): Answer input configuration settings

## Question Types & Configuration

### 1. Text Input (`text_input`)

For free text input fields.

```json
{
  "id": "user_name",
  "question": "What's your name?",
  "section": "personal_info", 
  "type": "text_input",
  "config": {
    "isRequired": true,
    "multiline": false,
    "keyboardType": "text",
    "minLength": 2,
    "maxLength": 50,
    "placeholder": "Enter your full name"
  }
}
```

Config options:
- `isRequired` (bool): Whether field must be filled
- `multiline` (bool): Allow multiple lines of text
- `keyboardType` (string): "text", "email", "phone", "url", "name"
- `minLength` (int): Minimum character count
- `maxLength` (int): Maximum character count  
- `placeholder` (string): Placeholder text in input field

### 2. Number Input (`number_input`)

For numeric input with number keyboard.

```json
{
  "id": "target_weight",
  "question": "What's your target weight?",
  "section": "goals",
  "type": "number_input", 
  "config": {
    "isRequired": true,
    "minValue": 50.0,
    "maxValue": 500.0,
    "allowDecimals": true,
    "decimalPlaces": 1,
    "unit": "lbs",
    "unitOptions": ["lbs", "kg"]
  }
}
```

Config options:
- `isRequired` (bool): Whether field must be filled
- `minValue` (double): Minimum allowed value
- `maxValue` (double): Maximum allowed value
- `allowDecimals` (bool): Allow decimal numbers
- `decimalPlaces` (int): Max decimal places when decimals allowed
- `unit` (string): Display unit next to input
- `unitOptions` (array): List of toggleable units

### 3. Single Choice (`single_choice`)

Radio button selection - user chooses one option.

```json
{
  "id": "fitness_level",
  "question": "What's your current fitness level?",
  "section": "assessment",
  "type": "single_choice",
  "options": [
    {
      "value": "beginner",
      "label": "Beginner", 
      "description": "New to regular exercise"
    },
    {
      "value": "intermediate", 
      "label": "Intermediate",
      "description": "Exercise 2-3 times per week"
    },
    {
      "value": "advanced",
      "label": "Advanced",
      "description": "Exercise 4+ times per week consistently"
    }
  ],
  "config": {
    "isRequired": true
  }
}
```

Config options:
- `isRequired` (bool): Whether user must select an option

Option structure:
- `value` (required): Internal value stored in answers
- `label` (required): Text displayed to user
- `description` (optional): Additional explanation text

### 4. Multiple Choice (`multiple_choice`)

Checkbox selection - user can choose multiple options.

```json
{
  "id": "fitness_goals", 
  "question": "What are your fitness goals?",
  "section": "goals",
  "type": "multiple_choice",
  "options": [
    {
      "value": "lose_weight",
      "label": "Lose weight",
      "description": "Reduce body weight through diet and exercise"
    },
    {
      "value": "build_muscle",
      "label": "Build muscle", 
      "description": "Increase muscle mass and strength"
    },
    {
      "value": "improve_endurance",
      "label": "Improve endurance",
      "description": "Build cardiovascular fitness"
    }
  ],
  "config": {
    "isRequired": true,
    "minSelections": 1,
    "maxSelections": 3
  }
}
```

Config options:
- `isRequired` (bool): Whether user must select at least one option
- `minSelections` (int): Minimum number of options to select
- `maxSelections` (int): Maximum number of options allowed

### 5. Slider (`slider`)

Sliding scale for range selection.

```json
{
  "id": "workout_frequency",
  "question": "How many days per week do you want to work out?",
  "section": "schedule",
  "type": "slider",
  "config": {
    "isRequired": true,
    "minValue": 1.0,
    "maxValue": 7.0,
    "divisions": 6,
    "step": 1.0,
    "showValue": true,
    "unit": "days"
  }
}
```

Config options:
- `isRequired` (bool): Whether user must set a value
- `minValue` (double): Minimum slider value
- `maxValue` (double): Maximum slider value  
- `divisions` (int): Number of discrete snap points
- `step` (double): Step size between values
- `showValue` (bool): Display current value above slider
- `unit` (string): Unit displayed with value

### 6. Date Picker (`date_picker`)

Calendar date selection.

```json
{
  "id": "target_date",
  "question": "When do you want to achieve your goal?",
  "section": "goals", 
  "type": "date_picker",
  "config": {
    "isRequired": true,
    "minDate": "2024-01-01",
    "maxDate": "2025-12-31", 
    "initialDatePickerMode": "day"
  }
}
```

Config options:
- `isRequired` (bool): Whether user must select a date
- `minDate` (string): Earliest selectable date (ISO format)
- `maxDate` (string): Latest selectable date (ISO format)
- `initialDatePickerMode` (string): "day" or "year"

## Conditional Questions

Questions can be shown/hidden based on previous answers using conditions:

```json
{
  "condition": {
    "questionId": "fitness_goals",
    "operator": "contains", 
    "value": "lose_weight"
  }
}
```

This question only shows if the user selected "lose_weight" in the fitness_goals question.

## Complete Example

```json
{
  "version": "1.0",
  "questions": [
    {
      "id": "user_name",
      "question": "What's your name?",
      "section": "personal_info",
      "type": "text_input",
      "config": {
        "isRequired": true,
        "minLength": 2,
        "maxLength": 50
      }
    },
    {
      "id": "target_weight", 
      "question": "What's your target weight?",
      "section": "goals",
      "type": "number_input",
      "subtitle": "This helps us create your personalized plan",
      "config": {
        "isRequired": true,
        "minValue": 50.0,
        "maxValue": 500.0,
        "allowDecimals": true,
        "unit": "lbs",
        "unitOptions": ["lbs", "kg"]
      }
    }
  ]
}
```