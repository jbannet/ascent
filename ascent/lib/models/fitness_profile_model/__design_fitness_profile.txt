fitness_profile_model/ // Onboarding answers → weighted feature vector (PRIORITY-ORDERED)
├── fitness_profile.dart // Seeds feature map, reloads persisted values, triggers extractors
└── fitness_profile_extraction_extensions/
    // PRIORITY 1: SAFETY & RISK FACTORS (Critical - Check First)
    ├── functional.dart (INCLUDE RECOMMENDATION)
      └── prioritize_functional = 
          (age >= 70 ? 1.0 : 0.0) +
          (can_do_chair_stand == 0.0 ? 0.3 : 0.0) +
          (pace_mph < 2.0 ? 0.3 : 0.0)
    ├── injuries.dart (INCLUDE RECOMMENDATION)
    │   └── feature:  [Let's keep this in a separate array]
    ├── osteoporosis.dart
    │   └── feature: FeatureConstants.osteoporosisRisk (INCLUDE RECOMMENDATION)
    ├── sedentary_lifestyle.dart // NEW - Sedentary risk factors
    │   ├── feature: sedentary_job (yes or no) --> recommendation: increases mortality; breaks recommendation (monitor?)
    //
    // PRIORITY 2: CARDIOVASCULAR FITNESS (Major Health Impact)
    ├── cardio.dart
    │   ├── feature: cardio_pace
    │   ├── feature: vo2max 
    │   ├── feature: mets_capacity
    │   ├── feature: cardio_fitness_percentile (INCLUDE RECOMMENDATION)
    │   ├── feature: max_heart_rate
    │   ├── feature: hr_zone1
    │   ├── feature: hr_zone2
    │   ├── feature: hr_zone3
    │   ├── feature: hr_zone4
    │   ├── feature: hr_zone5
    │   ├── feature: met_zone1
    │   ├── feature: met_zone2
    │   ├── feature: met_zone3
    │   ├── feature: met_zone4
    │   ├── feature: met_zone5
    │   └── feature: cardio_recovery_hours
    //
    // PRIORITY 3: RECOVERY & LIFESTYLE FACTORS (Foundation for Training)
    ├── sleep.dart // NEW 
    │   ├── feature: sleep_hours --> (INCLUDE RECOMMENDATION)
    ├── nutrition.dart // NEW - Nutrition quality assessment
    │   ├── feature: sugary_treats_per_day
    │   ├── feature: sodas_per_day
    │   ├── feature: grains_per_day
    │   ├── feature: alcohol_per_week
    │   └── calculation: diet_quality_score (INCLUDE RECOMMENDATION)
 calculation: diet_quality_score = 100  // Start with perfect score

  // Deductions:
  - (alcohol_per_week * 4)         // -4 points per drink
  - (sugary_treats_per_day * 2)    // -2 points per sugary treat
  - (sodas_per_day * 2)             // -2 points per soda
  - (grains_per_day * 1)            // -1 point per grain serving

  // Floor at 0
  diet_quality_score = MAX(0, diet_quality_score)
    //
    // PRIORITY 4: STRENGTH & MUSCLE HEALTH 
    ├── strength.dart (recommendation)
    │   ├── feature: upper_body_strength_percentile
    │   ├── feature: lower_body_strength_percentile
    │   ├── feature: strength_fitness_percentile 
    │   ├── feature: pushup_count
    │   ├── feature: squat_count
      │   ├── feature: strength_recovery_hours
    │   ├── feature: strength_optimal_rep_range_min
    │   ├── feature: strength_optimal_rep_range_max
    │   ├── feature: strength_optimal_sets_range_min
    │   ├── feature: strength_optimal_sets_range_max
    │   ├── feature: strength_time_between_sets
    │   ├── feature: strength_percent_of_1_RPM


      strength_optimal_rep_range_min/max

  if (age >= 50 OR strength_fitness_percentile < 0.25) {
    strength_optimal_rep_range_min = 10
    strength_optimal_rep_range_max = 15
  } else {
    strength_optimal_rep_range_min = 8
    strength_optimal_rep_range_max = 12
  }

  strength_time_between_sets (seconds)

  if (age >= 60) {
    strength_time_between_sets = 45  // 30-60 sec range, use middle
  } else if (strength_fitness_percentile > 0.75) {
    strength_time_between_sets = 150  // 2.5 min for strength/power
  } else {
    strength_time_between_sets = 90   // 1.5 min for hypertrophy
  }

  strength_percent_of_1RM

  if (age >= 50 AND strength_fitness_percentile < 0.5) {
    strength_percent_of_1RM = 45  // 40-50% for older novice
  } else if (strength_fitness_percentile < 0.25) {
    strength_percent_of_1RM = 40  // Very weak, focus on form
  } else if (strength_fitness_percentile > 0.75) {
    strength_percent_of_1RM = 80  // Experienced lifters
  } else {
    strength_percent_of_1RM = 55  // 50-60% novice to intermediate
  }

  strength_sets_recommendation (should add this)

  if (strength_fitness_percentile < 0.10) {
    feature: strength_optimal_set_range_min = 1
     feature: strength_optimal_set_range_max = 3  // 1-3 sets, learning form
  } else if (strength_fitness_percentile > 0.75) {
     feature: strength_optimal_set_range_min =3
     feature: strength_optimal_set_range_max = 5
  } else {
     feature: strength_optimal_set_range_min = 2
     feature: strength_optimal_set_range_max =4
  }

    ├── balance.dart (INCLUDE RECOMMENDATION)
    │   ├── feature: can_do_chair_stand
    │   ├── feature: fall_history
    │   ├── feature: fall_risk_factor_count
    │   ├── feature: fear_of_falling
    │   ├── feature: needs_seated_exercises // Start with unknown
    
    ├── flexibility.dart (INCLUDE RECOMMENDATION)
    │   ├── feature: days_stretching_per_week

    //
    // PRIORITY 5: PLAN CONSTRUCTION GUIDANCE (Training Parameters)
    ├── session_commitment.dart
    │   ├── feature: full_sessions_per_week
    │   ├── feature: micro_sessions_per_week
    │   ├── feature: total_training_days
    │   └── feature: weekly_training_minutes
    ├── relative_objective_importance.dart (INCLUDE RECOMMENDATION)
    │   ├── feature: FeatureConstants.categoryCardio 
    │   ├── feature: FeatureConstants.categoryStrength
    │   ├── feature: FeatureConstants.categoryBalance
    │   ├── feature: FeatureConstants.categoryStretching
    │   └── feature: FeatureConstants.categoryFunctional
    //
    // RESIDUAL: DEMOGRAPHICS & OTHER (Supporting Information)
    ├── age_bracket.dart
    │   ├── feature: FeatureConstants.ageBracketUnder20
    │   ├── feature: FeatureConstants.ageBracket20To29
    │   ├── feature: FeatureConstants.ageBracket30To39
    │   ├── feature: FeatureConstants.ageBracket40To49
    │   ├── feature: FeatureConstants.ageBracket50To59
    │   ├── feature: FeatureConstants.ageBracket60To69
    │   └── feature: FeatureConstants.ageBracket70Plus
    └── weight_management.dart (INCLUDE POLITE RECOMMENDATION? MORE DIET?)
  │   ├── feature: weight_pounds
  │   ├── feature: height_inches
  │   ├── feature: bmi
  │   ├── feature: weight_objective (lose/gain/maintain)
  │   ├── feature: needs_weight_loss (BMI > 25)  

reference_data/
├── acsm_cardio_norms.dart
├── acsm_pushup_norms.dart
├── acsm_squat_norms.dart
└── age_group_utility.dart

